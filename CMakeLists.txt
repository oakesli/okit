cmake_minimum_required(VERSION 3.10)
project(okit)

set(CMAKE_CXX_STANDARD 20)

if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    if(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
        set(PLATFORM_DIR "okit-linux-x64")
    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "aarch64")
        set(PLATFORM_DIR "okit-linux-arm64")
    else()
        set(PLATFORM_DIR "okit-linux-${CMAKE_SYSTEM_PROCESSOR}")
    endif()
elseif(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    if(CMAKE_OSX_ARCHITECTURES)
        if(CMAKE_OSX_ARCHITECTURES MATCHES "arm64")
            set(PLATFORM_DIR "okit-macos-arm64")
        else()
            set(PLATFORM_DIR "okit-macos-x64")
        endif()
    else()
        execute_process(COMMAND uname -m OUTPUT_VARIABLE ARCH OUTPUT_STRIP_TRAILING_WHITESPACE)
        if(ARCH STREQUAL "arm64")
            set(PLATFORM_DIR "okit-macos-arm64")
        else()
            set(PLATFORM_DIR "okit-macos-x64")
        endif()
    endif()
else()
    set(PLATFORM_DIR "okit-${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}")
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/${PLATFORM_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/${PLATFORM_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/${PLATFORM_DIR}/lib)

add_executable(extensions src/extensions.cpp)
add_executable(tofa src/tofa.cpp)
add_executable(category src/category.cpp)

target_include_directories(category PUBLIC ${CMAKE_SOURCE_DIR}/third_party/cmdline)
